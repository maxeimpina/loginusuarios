/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import clases.persona;
import clases.Validador;
import javax.swing.JOptionPane;

import java.io.*;  //para manejo de archivos de texto

/**
 *
 * @author maxi
 */
public class CrearUsuarios extends javax.swing.JFrame  {

    /**
     * Creates new form CrearUsuarios
     */
    public CrearUsuarios() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLusuario = new javax.swing.JLabel();
        INusr = new javax.swing.JTextField();
        JLcontraseña = new javax.swing.JLabel();
        INpass = new javax.swing.JTextField();
        INrepass = new javax.swing.JTextField();
        JLrepass = new javax.swing.JLabel();
        JLemail = new javax.swing.JLabel();
        JLdni = new javax.swing.JLabel();
        INemail = new javax.swing.JTextField();
        INdni = new javax.swing.JTextField();
        BTNcrearusr = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JLusuario.setText("usuario");

        INusr.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                INusrComponentAdded(evt);
            }
        });
        INusr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INusrActionPerformed(evt);
            }
        });

        JLcontraseña.setText("contraseña");

        INpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INpassActionPerformed(evt);
            }
        });

        INrepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INrepassActionPerformed(evt);
            }
        });

        JLrepass.setText("reingresar contraseña");

        JLemail.setText("Email");

        JLdni.setText("DNI");

        BTNcrearusr.setText("CREAR");
        BTNcrearusr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNcrearusrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(JLusuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JLcontraseña)
                .addGap(156, 156, 156))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(JLemail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(JLrepass)
                        .addGap(119, 119, 119))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(INdni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(INusr, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(INemail, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(INrepass, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(INpass))
                                .addGap(143, 143, 143))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BTNcrearusr)
                                .addGap(129, 129, 129))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(JLdni, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLusuario)
                    .addComponent(JLcontraseña))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(INusr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLemail)
                    .addComponent(JLrepass))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(INrepass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(INemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(JLdni)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(INdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(BTNcrearusr)
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void INpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_INpassActionPerformed

    private void INrepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INrepassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_INrepassActionPerformed

    private void BTNcrearusrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNcrearusrActionPerformed
        
        boolean validado=true;
        int contador=0;
        
        persona usuario1=new persona();

        
        //validamos
        String usuario=INusr.getText();
        Validador usuarioachequear=new Validador(usuario);
            
            if ((usuarioachequear.tamañoMinino(usuario, 8) == true) || ((usuarioachequear.tamañoMaximo(usuario, 20)) == true)){
                JOptionPane.showMessageDialog(null,"Usuario debera tener entre 8 y 20 caracteres");
                validado=false;
            }
            if (usuarioachequear.hayCaracteresEspeciales(usuario) == true){
                JOptionPane.showMessageDialog(null,"Usuario NO puede tener caracteres especiales");
                validado=false;
            }
            if (usuarioachequear.hayEspacio(usuario) == true){
                JOptionPane.showMessageDialog(null,"Usuario NO puede estar vacio Ni tener espacios");
                validado=false;
            }else{
                usuario1.setUsuario(usuario);
                contador++; //1
            }
            
        String contraseña=INpass.getText();
        Validador contraachequear=new Validador(contraseña);
        
        String recontra=INrepass.getText();
            
            if ((contraachequear.tamañoMinino(contraseña, 8) == true) || ((contraachequear.tamañoMaximo(contraseña, 20)) == true)){
                JOptionPane.showMessageDialog(null,"La contraseña debera tener entre 8 y 20 caracteres");
                validado=false;                
            }
            if (contraachequear.hayEspacio(contraseña) == true){
                JOptionPane.showMessageDialog(null,"La contraseña NO puede estar vacio Ni tener espacios");
                validado=false;
            }
            if (contraachequear.chequearContraseña(contraseña, recontra) == false){
                JOptionPane.showMessageDialog(null,"La contraseña debe coincidir con el reingreso");
                validado=false;                
            }else{
                usuario1.setContraseña(contraseña);
                contador++; //2
            }    
            
        String email=INemail.getText();
        Validador emailachequear=new Validador(email);
            
            if ((emailachequear.tamañoMinino(email, 5) == true) || ((usuarioachequear.tamañoMaximo(email, 254)) == true)){
                JOptionPane.showMessageDialog(null,"El email debera tener entre 5 y 254 caracteres");
                validado=false;                
            }
            if (emailachequear.hayEspacio(email) == true){
                JOptionPane.showMessageDialog(null,"El email NO puede estar vacio Ni tener espacios");
                validado=false;                
                }
            if (emailachequear.hayarroba(email) == false){
                JOptionPane.showMessageDialog(null,"El email debe conter arroba @");
                validado=false;                
            }else{
                usuario1.setEmail(email);
                contador++;     //3
            }
            
        String dni=INdni.getText();
        Validador dniachequear=new Validador(dni);
            
            if ((dniachequear.tamañoMinino(dni, 7) == true)){
                JOptionPane.showMessageDialog(null,"El dni debera tener como minimo 8 digitos\n");
                validado=false;
            }
            if ((dniachequear.esNumerico(dni) == false)){
                JOptionPane.showMessageDialog(null,"El dni debera ser numerico");
                validado=false;
            }
            if (dniachequear.hayEspacio(dni) == true){
                JOptionPane.showMessageDialog(null,"El dni NO puede estar vacio Ni tener espacios");
                validado=false;
                }
            if (dniachequear.haypuntos(dni) == true){
                JOptionPane.showMessageDialog(null,"Ingrese el dni sin puntos");
                validado=false;
            }else{
                usuario1.setDni(dni);
                contador++;     //4
            }
            
    
          //Fin validacion

       
        if ((validado == true) && (contador == 4)){

            MostrarUsuarios ui=new MostrarUsuarios();
            
            ui.setInfo(usuario1.getUsuario(), usuario1.getEmail(), usuario1.getDni());
            ui.setVisible(true);
            this.dispose();
            
            //creo archivo de texto con usr y pass
            
            try{
            
             // //carga y crea si no existe el archivo x la clase File
            File archaabrir= new File (usuario1.getUsuario()+".txt"); 
            System.out.println("Iniciando escritura...");
        
           //crea el flujo de trabajo hacia el archivo abierto x la clase FileWriter
            FileWriter archflujo= new FileWriter(archaabrir);  
            
             //permite la escritura x la clase PrintWriter
            PrintWriter archaescribir = new PrintWriter (archflujo);
        
            archaescribir.write(usuario1.getUsuario());
            archaescribir.write("\n");
            archaescribir.write(usuario1.getContraseña());

            
            archflujo.close();  //siempre se tiene que cerrar el flujo
            System.out.println("Finalizo la escritura...");

        }
            catch(IOException e){
                System.out.println("Error. "+e);
                
            }

                   
        }else {

            CrearUsuarios crear = new CrearUsuarios();   //instancio el formulario nuevamente
            this.dispose();     
            crear.setVisible(true);
            contador=0;
            validado=false;

        }
 
    }//GEN-LAST:event_BTNcrearusrActionPerformed

    private void INusrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INusrActionPerformed


    }//GEN-LAST:event_INusrActionPerformed

    private void INusrComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_INusrComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_INusrComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNcrearusr;
    private javax.swing.JTextField INdni;
    private javax.swing.JTextField INemail;
    private javax.swing.JTextField INpass;
    private javax.swing.JTextField INrepass;
    private javax.swing.JTextField INusr;
    private javax.swing.JLabel JLcontraseña;
    private javax.swing.JLabel JLdni;
    private javax.swing.JLabel JLemail;
    private javax.swing.JLabel JLrepass;
    private javax.swing.JLabel JLusuario;
    // End of variables declaration//GEN-END:variables
}
